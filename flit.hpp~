#ifndef FLIT_H
#define FLIT_H

#include <stdint.h>
#include "routing_table.hpp"
#include <vector>



class Flit {
    
    int32_t _uid;
    int32_t _enter_queue_time;
    int32_t _enter_network_time;
    int32_t _leave_network_time;
    
  public:
    Flit();
    Flit();
    inline int32_t uid() {return _uid; };
    inline int32_t enter_queue_time() { return _enter_queue_time; };
    inline void enter_queue_time(int32_t qt) {_enter_queue_time = qt; };
    inline int32_t enter_network_time() { return _enter_network_time; };
    inline void enter_network_time(int32_t ent) {_enter_network_time = ent; };
    inline int32_t leave_network_time() { return _leave_network_time; };
    inline void leave_network_time(int32_t lnt) {_leave_network_time = lnt; };
    int32_t latency();
    int32_t transmission_time();
    
};
#endif

